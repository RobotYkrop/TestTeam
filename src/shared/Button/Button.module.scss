
.generic {
  appearance: none;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0;
  border: none;
  transition: var(--ui-transition, 250ms);
  transition-property: color, filter;
  font-size: 1rem;

  &:hover {
    cursor: pointer;
  }

  &:disabled {
    color: var(--text-color-faded, hsla(0, 0%, 0%, 0.3));

    &:hover {
      cursor: not-allowed;
    }
  }

  svg {
    width: 1em;
    height: 1em;
    fill: var(--text-color, black);

    & + * {
      margin-left: 0.5em;
    }
  }

  a {
    text-decoration: none;
    white-space: nowrap;
    color: var(--text-color, black);
    transition: none;
  }
}

.default {
  background-color: transparent;

  &:hover {
    filter: brightness(0.9);
  }

  &:not(:disabled):active {
    filter: brightness(0.8);
  }
}

.filled {
  background-color: var(--theme-color, white);
  border-block: 1.5px solid transparent;
  border-bottom-color: var(--darken25, hsla(0, 0%, 0%, 0.25));
  /* box-shadow: inset 0 -2px 0 var(--darken25, hsla(0, 0%, 0%, 0.25)); */

  &:hover {
    filter: brightness(0.9);
  }

  &:not(:disabled):active {
    /* box-shadow: none; */
    border-bottom-color: transparent;
    filter: brightness(0.8);
  }

  a, & > * {
    color: var(--text-color-alt, white);

    &:hover {
      color: var(--text-color-alt, white);
    }
  }

  svg {
    fill: var(--text-color-alt, white) !important;
  }
}

.outlined {
  background-color: transparent;
  border: 1.5px solid currentColor;

  &:hover {
    color: var(--theme-color-highlight, grey);
  }

  &:not(:disabled):active {
    color: var(--text-color, white);
  }

  & > * {
    color: inherit;

    &:hover {
      color: inherit;
    }
  }
}

.default {
  border-radius: 0.18em;

  & > * {
    padding: 0.4em 0.5em;
  }

  /* & > *:first-child {
    padding-inline: 0.2em;
  } */
}

.circle {
  width: 2.15em;
  height: 2.15em;
  border-radius: 50%;

  & > * {
    padding: 0.4em;
  }
}

.round {
  border-radius: 2em;

  & > * {
    padding: 0.4em 0.8em;
  }
}
